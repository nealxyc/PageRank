Naive implementation:

Python, epsilon 1e-8

CPU: 2.9 GHz Intel Core i5
Read graph: 30.3860499859 seconds.
Page Rank: 377.181463957 seconds.
Done after 67 iterations.

real	6m51.285s
user	6m47.051s
sys	0m3.445s

After optimization:
Read graph: 26.5064520836 seconds.
Page Rank: 339.696664095 seconds.
Done after 67 iterations.

real	6m8.896s
user	6m5.399s
sys	0m2.089s

===
Read graph: 27.3086249828 seconds.
Read 875713 nodes in graph
Page Rank: 330.826992035 seconds.
Done after 67 iterations.

real	6m0.932s
user	5m58.694s
sys	0m1.542s

===
Use dict as vector
Read graph: 26.6066598892 seconds.
Read 875713 nodes in graph
Page Rank: 287.525373936 seconds.
Done after 67 iterations.

real	5m16.534s
user	5m13.580s
sys	0m1.771s

===
Read graph: 24.9926009178 seconds.
Read 875713 nodes in graph
Page Rank: 283.078444004 seconds.
Done after 67 iterations.

=== dict, remove inner []
Read graph: 25.5084850788 seconds.
Read 875713 nodes in graph
Page Rank: 275.780315161 seconds.
Done after 67 iterations.

real	5m3.572s
user	5m1.209s
sys	0m1.522s

=== use array.array
Read graph: 25.4066710472 seconds.
Read 875713 nodes in graph
Page Rank: 327.624927044 seconds.
Done after 70 iterations.

real	5m55.705s
user	5m53.525s
sys	0m1.486s

=== add preprocessing
Read graph: 25.4834570885 seconds.
Read 875713 nodes in graph
Preprocess graph: 6.80310606956 seconds
Page Rank: 209.519629002 seconds.
Done after 70 iterations.

real	4m5.517s
user	4m3.065s
sys	0m1.790s

=== Again remove inner []
Read graph: 3e+01 seconds.
Read 875713 nodes in graph
Preprocess graph: 7e+00 seconds
Page Rank: 2e+02 seconds.
Done after 70 iterations.

real	3m40.885s
user	3m38.552s
sys	0m1.672s

===
Wed Mar  4 10:30:42 PST 2015
Read graph: 19.3 seconds.
Preprocess graph: 7.1 seconds
Page Rank: 176.9 seconds.
Done after 70 iterations.

real	3m26.740s
user	3m24.339s
sys	0m1.645s

=== Changed computation. Pushing out scores of every node instead of pulling in.
Read graph: 17.4 seconds.
Preprocess graph: 6.5 seconds
Page Rank: 170.0 seconds.
Done after 67 iterations.

real	3m16.300s
user	3m14.067s
sys	0m1.136s

=== loop through keys in g instead of every node
Read graph: 17.1 seconds.
Preprocess graph: 6.6 seconds
Page Rank: 161.8 seconds.
Done after 67 iterations.

real	3m7.842s
user	3m6.182s
sys	0m1.057s

=== Multiply by beta and fix leak at the same time
Wed Mar  4 15:55:17 PST 2015
Read graph: 17.1 seconds.
Preprocess graph: 6.7 seconds
Page Rank: 151.5 seconds.
Done after 67 iterations.

real	2m57.684s
user	2m55.967s
sys	0m1.209s

=== use numpy.array
Wed Mar  4 17:25:58 PST 2015
Read graph: 17.9 seconds.
Preprocess graph: 6.7 seconds
Page Rank: 429.5 seconds.
Done after 67 iterations.

real	7m37.321s
user	7m31.522s
sys	0m2.745s

=== Back to master. Removed lambda
Wed Mar  4 17:49:34 PST 2015
Read graph: 16.9 seconds.
Preprocess graph: 6.6 seconds
Page Rank: 142.8 seconds.
Done after 67 iterations.

real	2m48.735s
user	2m45.909s
sys	0m1.534s

=== Multi-threading is slower (because of GIL)
Wed Mar  4 22:48:42 PST 2015
Read graph: 18.5 seconds.
Preprocess graph: 7.6 seconds
T0: lower=0, higher=218928
T1: lower=218928, higher=437856
T2: lower=437856, higher=656784
T3: lower=656784, higher=875713
Page Rank: 244.6 seconds.
Done after 67 iterations.

real	4m33.272s
user	4m15.684s
sys	1m29.875s

=== Moved g into 1D array
Fri Mar  6 00:47:41 PST 2015
PID 64958
Read graph: 22.8 seconds.
Preprocess graph: 7.8 seconds
Page Rank: 180.6 seconds.
Done after 67 iterations.

real	3m33.833s
user	3m32.440s
sys	0m1.076s

=== Stores i in graph (array)
Fri Mar  6 18:41:09 PST 2015
PID 65578
Read graph: 19.2 seconds.
Preprocess graph: 10.2 seconds
Page Rank: 147.6 seconds.
Done after 67 iterations.

real	2m59.103s
user	2m55.691s
sys	0m1.940s
